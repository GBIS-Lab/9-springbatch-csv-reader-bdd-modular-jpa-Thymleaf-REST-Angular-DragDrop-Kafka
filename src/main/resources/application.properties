spring.application.name=SmartphoneBatch

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.springframework.jdbc.core=DEBUG
logging.level.org.springframework.batch=DEBUG
logging.level.org.springframework.jdbc.datasource.init=DEBUG
logging.level.com.nemezyx=DEBUG
#logging.level.org.springframework.kafka=DEBUG
logging.level.com.nemezyx.smartphonebatch=DEBUG
#logging.level.org.apache.kafka=DEBUG

spring.batch.job.enabled=true
spring.batch.initialize-schema=always

spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.datasource.platform=h2
spring.datasource.url=jdbc:h2:file:./data/testdb
#spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE

##cela detruit toutes les donnees bon pour du test local uniquement
##ddl-auto=create-drop : recree les tables JPA a chaque lancement
##initialize-schema=always : execute schema.sql a chaque lancement
spring.jpa.hibernate.ddl-auto=create-drop
###spring.jpa.hibernate.ddl-auto=update


spring.batch.jdbc.initialize-schema=always

spring.batch.jdbc.schema=classpath:org/springframework/batch/core/schema-h2.sql

spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.sql.init.mode=always
spring.sql.init.platform=h2

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Configuration Kafka
spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

#Pulsar
pulsar.service-url= pulsar://localhost:6650